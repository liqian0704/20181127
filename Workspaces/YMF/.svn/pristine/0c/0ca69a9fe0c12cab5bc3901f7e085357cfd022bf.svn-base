<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<context:component-scan base-package="com.yeepay.g3.core.ymf">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>

	<aop:aspectj-autoproxy proxy-target-class='true'/>

	<import resource="classpath*:/ymf-spring/spring-hessian.xml" />
	<import resource="classpath*:/ymf-spring/spring-httpInvoke.xml" />
    <import resource="classpath*:/ymf-spring/ymf-datasource.xml" />

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="transactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 使用 annotation 定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<!-- MyBatis 配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage"
			value="com.yeepay.g3.core.ymf.entity,com.yeepay.g3.facade.ymf.enumtype" />
		<property name="mapperLocations" value="classpath:ymf-mapper/**/*.xml" />
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.yeepay.g3.core.ymf.dao" />
		<property name="annotationClass" value="org.springframework.stereotype.Repository" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>


	<!-- Hessian 调用添加日志记录 -->
	<bean id="loggerInterceptor" class="com.yeepay.g3.core.ymf.aop.LoggerInterceptor" />
	<aop:config>
		<aop:advisor advice-ref="loggerInterceptor"
			pointcut="execution(* com.yeepay.g3.core.ymf.facade..*.*(..))" />
	</aop:config>


	<!-- 日志拦截 调用添加日志记录 -->
	<bean id="serviceLoggerInterceptor" class="com.yeepay.g3.core.ymf.aop.ServiceLoggerInterceptor">
        <property name="operateLogService" ref="operateLogServiceImpl" />
    </bean>
	<aop:config>
		<aop:advisor advice-ref="serviceLoggerInterceptor"
					 pointcut="execution(* com.yeepay.g3.core.ymf.service..*.save*(..)) ||
								execution(* com.yeepay.g3.core.ymf.service..*.update*(..)) ||
								execution(* com.yeepay.g3.core.ymf.service..*.delete*(..)) ||
								execution(* com.yeepay.g3.core.ymf.service..*.batch*(..))" />
	</aop:config>


</beans>