-- 商户主表
CREATE TABLE YMF_CUSTOMER (
  ID              BIGINT NOT NULL PRIMARY KEY,
  OPTIMISITC      BIGINT DEFAULT 0,
  CUSTOMER_NUMBER VARCHAR(30), -- 唯一性索引
  CUSTOMER_NAME   VARCHAR(100), -- 索引
  CUSTOMER_LEVEL  VARCHAR(30), -- 商户等级
  CREATE_TIME     TIMESTAMP, -- 索引
  UPDATE_TIME     TIMESTAMP,
  INDUSTRY_TYPE   VARCHAR(50), -- 所属行业   从二代取
  CUSTOMER_TYPE   VARCHAR(50), -- 商户类型   从二代取
  PAY_TYPE_INFO   VARCHAR(500), -- 支付方式
  BUSINESS_ID     BIGINT, -- 业务方
  APP_TYPE        VARCHAR(100), -- 应用类型
  STATUS          VARCHAR(50) ,   -- 商户状态  枚举
  CUSTOMER_LOGO   varchar(255) ,   --商户LOGO
  VALIDITY_PERIOD integer      --订单有效期,单位小时
);
-- 主键自增序列
CREATE SEQUENCE SEQ_CUSTOMER_ID AS BIGINT;
-- 索引
CREATE UNIQUE INDEX CUSTOMER_CUSNUMBER ON YMF_CUSTOMER (CUSTOMER_NUMBER);
CREATE INDEX CUSTOMER_CUSNAME ON YMF_CUSTOMER (CUSTOMER_NAME);
CREATE INDEX CUSTOMER_CTIME ON YMF_CUSTOMER (CREATE_TIME);

--商户权限表
CREATE TABLE YMF_CUSTOMERFUN (
  ID              BIGINT NOT NULL PRIMARY KEY,
  OPTIMISITC      BIGINT DEFAULT 0,
  CUSTOMER_NUMBER VARCHAR(30),
  TYPE_NAME       VARCHAR(30),
  STATUS          VARCHAR(50)
);
CREATE SEQUENCE SEQ_CUSTOMERFUNCTION_ID AS BIGINT;
CREATE INDEX CUSTOMERFUNCTION_CUSNUMBER ON YMF_CUSTOMERFUN (CUSTOMER_NUMBER);

-- 二维码主表
CREATE TABLE YMF_QRCODE (
  ID              BIGINT      NOT NULL PRIMARY KEY,
  OPTIMISITC      BIGINT DEFAULT 0,
  CUSTOMER_NUMBER VARCHAR(30), -- 关联商户
  CREATE_TIME     TIMESTAMP, -- 索引
  UPDATE_TIME     TIMESTAMP,
  CLOSE_TIME      TIMESTAMP,--关闭时间
  QR_ID           VARCHAR(64), -- 二维码ID 32位 唯一性索引
  FTP_URL         VARCHAR(255), -- FTP地址
  STATUS          VARCHAR(50),                      -- 二维码状态 枚举
  shop_Name       VARCHAR(120)      -- 2016-11-03 17:16:08 新增网点字段
);

-- 主键自增序列
CREATE SEQUENCE SEQ_QRCODE_ID AS BIGINT;
-- 索引
CREATE INDEX QRCODE_CUSNUMBER ON YMF_QRCODE (CUSTOMER_NUMBER);
CREATE INDEX QRCODE_CTIME ON YMF_QRCODE (CREATE_TIME);
CREATE UNIQUE INDEX QRCODE_QRID ON YMF_QRCODE (QR_ID);

-- 数据字典
CREATE TABLE YMF_DICTIONARY (
  ID         BIGINT NOT NULL PRIMARY KEY,
  OPTIMISITC BIGINT DEFAULT 0,
  TYPE       VARCHAR(50), -- 唯一性索引
  CODE       VARCHAR(50), -- 唯一性索引
  NAME       VARCHAR(50),
  STATUS     VARCHAR(50),
  VALUE      VARCHAR(100),     -- 字典值
  CREATE_TIME TIMESTAMP,
  UPDATE_TIME TIMESTAMP,
  CAN_DELETE  SMALLINT DEFAULT 1   -- 字典是否能删除
);
--创建索引
CREATE SEQUENCE SEQ_DICTIONARY_ID AS BIGINT;
-- 唯一性索引
create unique index ymf_unique_index_dict on ymf_dictionary(type,code);


-- 业务方管理
CREATE TABLE YMF_BUSINESS (
  ID          BIGINT NOT NULL PRIMARY KEY,
  OPTIMISITC  BIGINT DEFAULT 0,
  BIZ_CODE    VARCHAR(50), -- 业务方标识 不能修改
  BIZ_NAME    VARCHAR(50),
  CREATE_TIME TIMESTAMP,
  UPDATE_TIME TIMESTAMP,
  STATUS      VARCHAR(30)
);
CREATE SEQUENCE SEQ_BUSINESS_ID AS BIGINT;

-- 操作日志
CREATE TABLE YMF_OPERAT_LOG (
  ID              BIGINT NOT NULL PRIMARY KEY,
  CREATE_TIME     TIMESTAMP, -- 索引 时间
  ENTITY_NAME     VARCHAR(100), -- 实体名称
  OPT_TYPE        VARCHAR(30), -- 操作类型
  CUSTOMER_NUMBER VARCHAR(30), -- 索引  关联商户
  OPERATOR_NAME   VARCHAR(100), -- 索引 操作人
  BIZ_TYPE        VARCHAR(30), -- 业务类型
  PROCEED_TIME    BIGINT, -- 执行时间
  DESCRIPTION     VARCHAR(2000)  -- 操作描述
);
CREATE SEQUENCE SEQ_OPERATLOG_ID AS BIGINT;

------------------订单表-BEGIN--------------
-- 建表
CREATE TABLE YMF_ORDER (
  ID                BIGINT      NOT NULL PRIMARY KEY,
  VERSION           BIGINT DEFAULT 0, -- 数据版本号
  CUSTOMER_NUMBER   VARCHAR(64) NOT NULL, -- 商户编号
  CUSTOMER_ORDER_ID VARCHAR(64), -- 商户订单号
  EXTERNAL_ID       VARCHAR(64), -- 交易参考号
  OUT_ORDER_ID      VARCHAR(64), -- 外部系统订单号（微信订单号，支付宝订单号）
  SAN_CODE          VARCHAR(32), -- 二维码编号
  CREATE_TIME       TIMESTAMP,   -- 订单创建时间
  COMPLETE_TIME     TIMESTAMP,   -- 订单完成时间
  ORDER_STATUS      VARCHAR(32), -- 订单状态
  TRX_AMT           DECIMAL(18, 2), -- 交易金额
  REAL_AMT          DECIMAL(18,2),  -- 实收金额
  REFUND_AMT        DECIMAL(18, 2), -- 已退金额
  FEE               DECIMAL(18, 2), -- 手续费
  RECEIVER_NAME     VARCHAR(100), -- 顾客姓名
  RECEIVER_TEL      VARCHAR(32), -- 顾客电话
  BUSINESS_TYPE     VARCHAR(32), -- 业务类型
  QUERY_COUNT       INTEGER, -- 查询次数
  REMARK            VARCHAR(128), -- 备注
  PAY_CONFIRM       VARCHAR(32)   -- 支付凭证码 交易参考号的后6位
);
-- Seq
CREATE SEQUENCE YMF_ORDER_SEQ AS BIGINT START WITH 1 INCREMENT BY 1 NO MINVALUE
NO MAXVALUE NO CYCLE CACHE 20 NO ORDER;
-- 索引
CREATE INDEX YMF_ORDER_CUSTOMER_NUMBER_INDEX ON YMF_ORDER (CUSTOMER_NUMBER);
CREATE INDEX YMF_ORDER_CUSTOMER_ORDER_ID_INDEX ON YMF_ORDER (CUSTOMER_ORDER_ID);
CREATE INDEX YMF_ORDER_EXTERNAL_ID_INDEX ON YMF_ORDER (EXTERNAL_ID);
CREATE INDEX YMF_ORDER_OUT_ORDER_ID_INDEX ON YMF_ORDER (OUT_ORDER_ID);
CREATE INDEX YMF_ORDER_SAN_CODE_INDEX ON YMF_ORDER (SAN_CODE);
CREATE INDEX YMF_ORDER_CREATE_TIME_INDEX ON YMF_ORDER (CREATE_TIME);
CREATE INDEX YMF_ORDER_COMPLETE_TIME_INDEX ON YMF_ORDER (COMPLETE_TIME);
CREATE INDEX YMF_ORDER_PAY_CONFIRM_INDEX ON YMF_ORDER (PAY_CONFIRM);



------------------订单表-END--------------

------------------支付PAYMENT表-BEGIN-----
-- 建表
CREATE TABLE YMF_PAYMENT (
  ID                BIGINT NOT NULL PRIMARY KEY,
  VERSION           BIGINT DEFAULT 0, -- 数据版本号
  ORDER_ID          BIGINT NOT NULL, -- 订单表主键 一个Order对应多个Payment
  CUSTOMER_NUMBER   VARCHAR(64), -- 商户编号
  CUSTOMER_ORDER_ID VARCHAR(64), -- 商户订单号
  PAY_SOURCE        VARCHAR(32), -- 支付方式
  CREATE_TIME       TIMESTAMP, -- 创建时间
  EXPIRE_TIME       TIMESTAMP, -- 订单最后可支付时间 从商户身上取
  PAY_URL           VARCHAR(256), -- 支付链接
  PAY_REQUEST_TIME  TIMESTAMP, -- 下单成功时间
  PAY_TIME          TIMESTAMP, -- 支付完成时间 收银台支付时间
  CHANNEL_PAY_TIME   TIMESTAMP, -- 支付接口 返回通道支付时间
  PAY_STATUS        VARCHAR(32), -- 支付状态|退款状态
  SETTLE_STATUS     VARCHAR(32), -- 清算状态
  SETTLE_TIME       TIMESTAMP, -- 清算完成时间
  BACK_URL          VARCHAR(256), -- 回调地址
  BANK_ORDER_ID     VARCHAR(64), -- 银行订单号
  YEEPAY_ORDER_ID   VARCHAR(64), -- 易宝订单号
  OUT_ORDER_ID      VARCHAR(64), -- 外部系统订单号（微信、支付宝订单号）
  TRX_AMT           DECIMAL(18, 2), -- 交易金额
  REAL_AMT          DECIMAL(18,2),  -- 实收金额
  REFUND_AMT        DECIMAL(18,2),  -- 退款金额
  FEE               DECIMAL(18, 2), -- 交易手续费
  TRX_TYPE          VARCHAR(32), -- 交易类型（支付、退款）
  OPEN_ID           VARCHAR(64), -- 微信openId
  BANK_TYPE         VARCHAR(32), -- 银行 一键支付有值
  BANK_NAME         VARCHAR(128), -- 银行名称		一键支付有值
  CARD_NO           VARCHAR(128), -- 银行卡号		一键支付有值
  CARD_TYPE         VARCHAR(64) -- 卡类型（借记卡、贷记卡） 
  
);

-- SEQ
CREATE SEQUENCE YMF_PAYMENT_SEQ AS BIGINT START WITH 1 INCREMENT BY 1 NO MINVALUE
NO MAXVALUE NO CYCLE CACHE 10 NO ORDER;
-- 索引
CREATE INDEX YMF_PAYMENT_CUSTOMER_NUMBER_INDEX ON YMF_PAYMENT (CUSTOMER_NUMBER);
CREATE INDEX YMF_PAYMENT_CUSTOMER_ORDER_ID_INDEX ON YMF_PAYMENT (CUSTOMER_ORDER_ID);
CREATE INDEX YMF_PAYMENT_CREATE_TIME_INDEX ON YMF_PAYMENT (CREATE_TIME);
CREATE INDEX YMF_PAYMENT_EXPIRE_TIME_INDEX ON YMF_PAYMENT (EXPIRE_TIME);
CREATE INDEX YMF_PAYMENT_PAY_REQUEST_TIME_INDEX ON YMF_PAYMENT (PAY_REQUEST_TIME);
CREATE INDEX YMF_PAYMENT_CHANNEL_PAY_TIME_INDEX ON YMF_PAYMENT (CHANNEL_PAY_TIME);
CREATE INDEX YMF_PAYMENT_PAY_TIME_INDEX ON YMF_PAYMENT (PAY_TIME);
CREATE INDEX YMF_PAYMENT_SETTLE_TIME_INDEX ON YMF_PAYMENT (SETTLE_TIME);
CREATE INDEX YMF_PAYMENT_YEEPAY_ORDER_ID_INDEX ON YMF_PAYMENT (YEEPAY_ORDER_ID);
CREATE INDEX YMF_PAYMENT_OUT_ORDER_ID_INDEX ON YMF_PAYMENT (OUT_ORDER_ID);
CREATE INDEX YMF_PAYMENT_OPEN_ID_INDEX ON YMF_PAYMENT (OPEN_ID);
CREATE INDEX YMF_PAYMENT_CARD_NO_INDEX ON YMF_PAYMENT (CARD_NO);


------------------支付PAYMENT表-END-------


create table YMF_REFUNDINFO (
  ID                            BIGINT     PRIMARY KEY  NOT NULL,
  VERSION                       INTEGER    DEFAULT 0,           -- 版本号
  ORDER_ID                      BIGINT     NOT NULL,            -- 订单表主键
  CUSTOMER_NUMBER               VARCHAR(64)     NOT NULL,       -- 商户编号
  CUSTOMER_ORDER_ID             VARCHAR(64)     NOT NULL,       -- 商户订单号
  REFUND_AMOUNT                 DECIMAL(18,2),                  -- 退款金额 总退款金额
  REMAIN                        DECIMAL(18,2),                  -- 剩余可退金额 remain
  FEE                           DECIMAL(18,2),                  -- 手续费退款总额
  REFUND_STATUS                 VARCHAR(30),                    -- 退款状态
  REFUND_TIMES                  INTEGER,                        -- 退款的请求次数
  TRX_AMOUNT                    DECIMAL(18,2),                  -- 订单交易金额
  ORDER_TIME                    TIMESTAMP,                      -- 原订单结束时间
  CREATE_TIME                   TIMESTAMP,                      -- 第一次退款时间
  LAST_REFUND_TIME              TIMESTAMP                       -- 最后退款时间
);
CREATE SEQUENCE YMF_REFUNDINFO_SEQ_ID AS BIGINT START WITH 1 INCREMENT BY 1 NO MINVALUE;
CREATE INDEX YMF_REFUNDINFO_ORDER_ID_INDEX ON YMF_REFUNDINFO (ORDER_ID);
CREATE INDEX YMF_REFUNDINFO_CUSTOMER_NUMBER_INDEX ON YMF_REFUNDINFO (CUSTOMER_NUMBER);
CREATE INDEX YMF_REFUNDINFO_CUSTOMER_ORDER_ID_INDEX ON YMF_REFUNDINFO (CUSTOMER_ORDER_ID);
CREATE INDEX YMF_REFUNDINFO_ORDER_TIME_INDEX ON YMF_REFUNDINFO (ORDER_TIME);
CREATE INDEX YMF_REFUNDINFO_CREATE_TIME_INDEX ON YMF_REFUNDINFO (CREATE_TIME);
CREATE INDEX YMF_REFUNDINFO_REFUND_TIME_INDEX ON YMF_REFUNDINFO (LAST_REFUND_TIME);


CREATE TABLE YMF_REFUND_DETAIL (
  ID                            BIGINT    PRIMARY KEY   NOT NULL,
  VERSION                       INTEGER    DEFAULT 0,           -- 版本号
  REFUNDINFO_ID                 BIGINT     NOT NULL,            -- 退款主表
  REFUND_SOURCE                 VARCHAR(30),                    -- 退款发起方
  REFUND_ORDER_ID               VARCHAR(64),                    -- 统一收银台 退款订单号  merchantRefundOrderid 商户退货订单号
  REFUND_REQUEST_ID             VARCHAR(64),                    -- 统一收银台 退款流水号  bizRefundNo  refund_request主键
  YEEPAY_ORDER_ID               VARCHAR(64)     NOT NULL,       -- 易宝交易流水号 tradeSysOrderId
  REFUND_TYPE                   VARCHAR(30),                    -- 退款操作类型（AUTO：接口处理，自动提交，MANUAL：人工处理，不支持退款接口）
  TRX_AMOUNT                    DECIMAL(18,2),                  -- 交易金额
  PAY_SOURCE                    VARCHAR(30),                    -- 支付方式
  REFUND_AMOUNT                 DECIMAL(18,2),                  -- 退款金额
  REFUND_FEE                    DECIMAL(18,2),                  -- 退款手续费
  REFUND_STATUS                 VARCHAR(30),                    -- 退款状态 	 * 状态（CORE_SUCCESS：核心平台成功，SUCCESS：成功，FAIL2MANUAL：失败转人工，FAIL：失败，CORE_COMPLETE：核心平台完成,POSP_SUCCESS:POS平台成功,POSP_FAILT:POS平台失败）
  REASON_CODE                   VARCHAR(20),                    -- 接口返回错误码
  REASON_MSG                    VARCHAR(255),                   -- 接口返回错误信息
  CREATE_TIME                   TIMESTAMP,                      -- 退款发起时间
  REFUND_TIME                   TIMESTAMP,                      -- 退款成功时间
  PAY_TIME                      TIMESTAMP,                      -- 原订单支付时间
  MANUAL_EXEC_TIME              TIMESTAMP,                      -- 人工退款发起时间 退款失败10次 需要手动退款
  MANUAL_OPERATOR               VARCHAR(50),                    -- 人工退款操作人
  REFUND_HANDLE_TYPE            VARCHAR(30),                    -- 人工退款处理状态（HANDLED：已处理 ， UNHANDLED:未处理）
  CAUSE                         VARCHAR(100)                    -- 退款缘由
);
CREATE SEQUENCE YMF_REFUND_DETAIL_SEQ_ID AS BIGINT START WITH 1 INCREMENT BY 1 NO MINVALUE;
CREATE INDEX YMF_REFUND_DETAIL_REFUNDINFO_ID_INDEX ON YMF_REFUND_DETAIL (REFUNDINFO_ID);
CREATE INDEX YMF_REFUND_DETAIL_REFUND_ORDER_ID_INDEX ON YMF_REFUND_DETAIL (REFUND_ORDER_ID);
CREATE INDEX YMF_REFUND_DETAIL_REFUND_REQUEST_ID_INDEX ON YMF_REFUND_DETAIL (REFUND_REQUEST_ID);
CREATE INDEX YMF_REFUND_DETAIL_CREATE_TIME_INDEX ON YMF_REFUND_DETAIL (CREATE_TIME);
CREATE INDEX YMF_REFUND_DETAIL_REFUND_TIME_INDEX ON YMF_REFUND_DETAIL (REFUND_TIME);
CREATE INDEX YMF_REFUND_DETAIL_PAY_TIME_INDEX ON YMF_REFUND_DETAIL (PAY_TIME);


------------------COD异步通知信息表 Begin
-- 建表
CREATE TABLE YMF_CODNOTIFYINFO (
    ID BIGINT PRIMARY KEY NOT NULL,
    EXTERNAL_ID VARCHAR(50) NOT NULL,	-- 交易参考号
    ORDER_NO VARCHAR(200),				-- COD运单号（商户订单号）
    STATUS VARCHAR(20),					  -- 通知状态 Status
    COD_INTERFACE VARCHAR(200),		-- 通知时调用的COD接口
    EXTEND_INFO VARCHAR(1024),		-- 扩展信息
    VERSION     INTEGER,					-- 版本
    NOTIFY_TYPE VARCHAR(20),			-- 通知方式 NotifyType
    EXP_DATE TIMESTAMP,					  -- 自动失效时间
    SEND_NUM INTEGER,					    -- 发送次数
    CREATE_DATE TIMESTAMP,				-- 创建时间
    UPDATE_TIME TIMESTAMP,        -- 更新时间
    TRX_TYPE VARCHAR(50)				  -- 交易类型
);
-- 建SEQ
CREATE sequence YMF_CODNOTIFYINFO_SEQ AS BIGINT START WITH 1 increment BY 1 no
minvalue no maxvalue no cycle cache 20 no ORDER;
-- 建索引
CREATE INDEX YMF_CODNOTIFYINFO_EXTERNAL_ID_INDEX ON YMF_CODNOTIFYINFO ("EXTERNAL_ID" ASC);
CREATE INDEX YMF_CODNOTIFYINFO_EXP_DATE_INDEX ON YMF_CODNOTIFYINFO ( "EXP_DATE" ASC );
------------------COD异步通知信息表 End
--二维码ID生成序列
CREATE sequence YMF_QRCODEID_SEQ AS BIGINT START WITH 1 increment BY 1



-- 商户与报备的微信appid、密钥关联关系
CREATE TABLE YMF_WECHAT_REL (
  ID                            BIGINT PRIMARY KEY NOT NULL,
  VERSION                       INTEGER    DEFAULT 0,           -- 版本号
  CUSTOMER_NUMBER               VARCHAR(64)   NOT NULL,         -- 商户编号
  CREATE_TIME                   TIMESTAMP,
  UPDATE_TIME                   TIMESTAMP,
  APP_ID                        VARCHAR(64)   NOT NULL,         -- 微信公众号appid
  APP_SECRET                    VARCHAR(128)   NOT NULL,         -- 微信公众号密钥
  STATUS                        VARCHAR(32)   NOT NULL,         -- 状态
  EXT_VAR                       VARCHAR(255),                   -- 扩展字段: 字符串
  EXT_NUM                       DECIMAL(18,4),                  -- 扩展字段: double
  EXT_BOOL                      SMALLINT      DEFAULT 1         -- 扩展字段: 布尔类型
);
-- 建SEQ
CREATE sequence YMF_WECHATREL_SEQ AS BIGINT START WITH 1 increment BY 1 no
minvalue no maxvalue no cycle cache 20 no ORDER;
-- 建索引
CREATE INDEX YMF_WECHAT_REL_CN_INDEX ON YMF_WECHAT_REL ("CUSTOMER_NUMBER" ASC);
CREATE INDEX YMF_WECHAT_REL_CTIME_INDEX ON YMF_WECHAT_REL ( "CREATE_TIME" ASC );
CREATE INDEX YMF_WECHAT_REL_UTIME_INDEX ON YMF_WECHAT_REL ( "UPDATE_TIME" ASC );
CREATE INDEX YMF_WECHAT_REL_APPID_INDEX ON YMF_WECHAT_REL ( "APP_ID" ASC );

--商户结算信息 add by fei.lu 2016-11-03 18:06:10
CREATE TABLE YMF_CUSTOMERSETTLE (
  ID              BIGINT NOT NULL PRIMARY KEY,
  VERSION         BIGINT DEFAULT 0,
  CUSTOMER_NUMBER VARCHAR(30),    -- 商户编号
  POST_BALANCE    DECIMAL(14,2),  -- 账户余额
  TRX_DATE 		    DATE,      -- 交易日期 yyyy-MM-dd
  REAL_AMOUNT     DECIMAL(14,2),  -- 打款金额
  SETTLE_TIMES    INTEGER,		      -- 清算次数
  create_time     TIMESTAMP,       -- 创建时间
  UPDATE_TIME     TIMESTAMP		  -- 更新时间
);
CREATE SEQUENCE YMF_CUSTOMERSETTLE_SEQ AS BIGINT START WITH 1 INCREMENT BY 1 NO MINVALUE
NO MAXVALUE NO CYCLE CACHE 10 NO ORDER;
CREATE INDEX YMF_CUSTOMERSETTLE_ID_INDEX ON YMF_CUSTOMERSETTLE ("CUSTOMER_NUMBER" ASC);
CREATE INDEX YMF_CUSTOMERSETTLE_TRX_DATE_INDEX ON YMF_CUSTOMERSETTLE ("TRX_DATE" DESC);
CREATE INDEX YMF_CUSTOMERSETTLE_CREATE_TIME_INDEX ON YMF_CUSTOMERSETTLE ("CREATE_TIME" DESC);
CREATE INDEX YMF_CUSTOMERSETTLE_UPDATE_TIME_INDEX ON YMF_CUSTOMERSETTLE ("UPDATE_TIME" DESC);


-- 建表 打赏模板表
CREATE TABLE YMF_GRATUITY (
    ID BIGINT PRIMARY KEY NOT NULL,
    CUSTOMER_NUMBER VARCHAR(50) NOT NULL,	-- 商户编号
    GRATUITY_TEMPLATE VARCHAR(32),				-- 打赏模板
    STATUS VARCHAR(20),					  -- 可用状态
    GRATUITY_REMARK VARCHAR(128)	-- 打赏备注
);
-- 建SEQ
CREATE sequence YMF_GRATUITY_SEQ AS BIGINT START WITH 1 increment BY 1 no
minvalue no maxvalue no cycle cache 20 no ORDER;
--只给商户号创建索引
CREATE INDEX YMF_GRATUITY_CUSTOMER_NUMBER_INDEX ON YMF_GRATUITY ("CUSTOMER_NUMBER" ASC);

--打赏子业务订单
CREATE TABLE YMF_GRATUITY_ORDER (
    ID BIGINT PRIMARY KEY NOT NULL,
    VERSION BIGINT DEFAULT 0, -- 数据版本号
    TRX_AMT DECIMAL(18, 2), -- 交易金额
    CUSTOMER_NUMBER VARCHAR(50) NOT NULL,	-- 商户编号
    orgExternal_ID  VARCHAR(64) NOT null, --关联订单交易参考号
    GRATUITY_AMOUNT VARCHAR(32), -- 打赏金额
    ORDER_STATUS VARCHAR(20),	 -- 订单状态
    CREATE_TIME       TIMESTAMP,   -- 订单创建时间
    COMPLETE_TIME     TIMESTAMP,   -- 订单完成时间
    EMPLOYEE_NUMBER   VARCHAR(50)  -- 员工工号
);
-- 建SEQ
CREATE sequence YMF_GRATUITY_ORDER_SEQ AS BIGINT START WITH 1 increment BY 1 no
minvalue no maxvalue no cycle cache 20 no ORDER;
--创建索引
CREATE INDEX YMF_GRATUITY_ORDER_CUSTOMER_NUMBER_INDEX ON YMF_GRATUITY_ORDER ("CUSTOMER_NUMBER" ASC);
CREATE INDEX YMF_GRATUITY_ORDER_CREATE_TIME_INDEX ON YMF_GRATUITY_ORDER ("CREATE_TIME" ASC);
CREATE INDEX YMF_GRATUITY_ORDER_COMPLETE_TIME_INDEX ON YMF_GRATUITY_ORDER ("COMPLETE_TIME" ASC);
CREATE INDEX YMF_GRATUITY_ORDER_ORGEXTERNAL_ID_INDEX ON YMF_GRATUITY_ORDER ("ORGEXTERNAL_ID" ASC);

-- 创建二维码关系表
CREATE TABLE YMF_QR_RELATION (
    ID BIGINT PRIMARY KEY NOT NULL,
    VERSION BIGINT DEFAULT 0, -- 数据版本号
    AGENT_NUMBER VARCHAR(50) NOT NULL,	-- 代理商商编
    REQUEST_ID  VARCHAR(64) NOT NULL, --关联订单号
    CREATE_TIME       TIMESTAMP,   -- 订单创建时间
    COMPLETE_TIME     TIMESTAMP,   -- 订单完成时间
    QRCOUNT SMALLINT,--采购数量
    SELLER_ID   BIGINT ,  --销售ID
    INVOICE VARCHAR(128) , --'单据号'
    STATUS  VARCHAR(32) NOT NULL --创建状态
);
-- 建SEQ
CREATE sequence YMF_QR_relation_SEQ AS BIGINT START WITH 1 increment BY 1 no
minvalue no maxvalue no cycle cache 20 no ORDER;
--只给商户号创建索引
CREATE INDEX YMF_QR_RELATION_REQUEST_ID_INDEX ON YMF_QR_RELATION ("REQUEST_ID" ASC);
CREATE INDEX YMF_QR_RELATION_AGENT_NUMBER_INDEX ON YMF_QR_RELATION ("AGENT_NUMBER" ASC);
CREATE INDEX YMF_QR_RELATION_CREATE_TIME_INDEX ON YMF_QR_RELATION ("CREATE_TIME" ASC);
CREATE INDEX YMF_QR_RELATION_COMPLETE_TIME_INDEX ON YMF_QR_RELATION ("COMPLETE_TIME" ASC);
CREATE INDEX YMF_QR_RELATION_SELLER_ID_INDEX ON YMF_QR_RELATION ("SELLER_ID" ASC);
CREATE INDEX YMF_QR_RELATION_INVOICE_INDEX ON YMF_QR_RELATION ("INVOICE" ASC);

---创建通知记录表
CREATE TABLE YMF_NOTIFY (
    ID BIGINT PRIMARY KEY NOT NULL,
    VERSION BIGINT DEFAULT 0, -- 数据版本号
    CUSTOMER_NUMBER VARCHAR(50) NOT NULL,	-- 商编
    REQUEST_ID  VARCHAR(64), --关联订单号
    EXTERNAL_ID  VARCHAR(64) NOT NULL, --关联参考号
    CREATE_TIME       TIMESTAMP,   -- 创建时间
    LAST_NOTIFY_TIME     TIMESTAMP,   -- 最后通知时间
    NOTIFY_RECODE SMALLINT,--通知次数
    NOTIFY_TYPE VARCHAR(32), --通知类型
    STATUS  VARCHAR(32) NOT NULL, --通知状态
    remark varchar(256) --通知备注 失败错误信息，或者通知返回非成功状态原因。
);
-- 建SEQ
CREATE SEQUENCE YMF_NOTIFY_SEQ AS BIGINT START WITH 1 INCREMENT BY 1 NO
MINVALUE NO MAXVALUE NO CYCLE CACHE 20 NO ORDER;
--只给商户号创建索引
CREATE INDEX YMF_NOTIFY_REQUEST_ID_INDEX ON YMF_NOTIFY ("REQUEST_ID" ASC);
CREATE INDEX YMF_NOTIFY_EXTERNAL_ID_INDEX ON YMF_NOTIFY ("EXTERNAL_ID" ASC);
CREATE INDEX YMF_NOTIFY_CUSTOMER_NUMBER_INDEX ON YMF_NOTIFY ("CUSTOMER_NUMBER" ASC);
CREATE INDEX YMF_NOTIFY_CREATE_TIME_INDEX ON YMF_NOTIFY ("CREATE_TIME" ASC);
CREATE INDEX YMF_NOTIFY_LAST_NOTIFY_TIME_INDEX ON YMF_NOTIFY ("LAST_NOTIFY_TIME" ASC);

ALTER TABLE YMF_QR_RELATION ADD COLUMN SALES_NAME VARCHAR(64);
ALTER TABLE YMF_QR_RELATION ADD COLUMN SALES_NO VARCHAR(64);
CREATE INDEX YMF_QR_RELATION_SALES_NO_INDEX ON YMF_QR_RELATION ("SALES_NO" ASC);

--秒到需求表start
CREATE TABLE YMF_REMITTANCE (
    ID BIGINT PRIMARY KEY NOT NULL,
    VERSION INT DEFAULT 0, -- 数据版本号
    CUSTOMER_NUMBER VARCHAR(50) NOT NULL,	-- 商编
    CUSTOMER_ORDER_ID  VARCHAR(64), --关联订单号
    YEEPAY_ORDER_ID  VARCHAR(64), --关联订单号
    BATCH_NO  VARCHAR(32), --打款批次
    AMOUNT DECIMAL(18,2),-- 打款金额
    SRC_FEE DECIMAL(18,2),--付款方手续费
    STATUS VARCHAR(32),--接收状态
    TARGET_FEE DECIMAL(18,2),--收款方手续费
    FEE DECIMAL(18,2),--手续费
    REMIT_STATUS  VARCHAR(32) NOT NULL, --打款状态
    CREATE_TIME   TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL,  -- 创建时间
    REQUEST_TIME   TIMESTAMP,   -- 最后通知时间  这个时间可以用来保存查询时间
    CALLBACK_TIME   TIMESTAMP,   -- 最后通知时间
    LAST_NOTIFY_TIME   TIMESTAMP,   -- 最后通知时间
    DESCRIPTION   VARCHAR(512),   -- 描述,会加入打款时,一些异常或者错误信息
    REMARK VARCHAR(256) --备注
);
CREATE sequence YMF_REMITTANCE_SEQ AS BIGINT START WITH 1 increment BY 1 no
minvalue no maxvalue no cycle cache 20 no ORDER;
CREATE INDEX IDX_CUSTOMER_ORDER_ID ON YMF_REMITTANCE
		(CUSTOMER_ORDER_ID ASC)
;
CREATE INDEX IDX_CUSTOMER_NUMBER ON YMF_REMITTANCE
		(CUSTOMER_NUMBER ASC)
;
CREATE  UNIQUE INDEX IDX_YEEPAY_ORDER_ID ON YMF_REMITTANCE
		(YEEPAY_ORDER_ID ASC)
;
CREATE INDEX IDX_BATCH_NO ON YMF_REMITTANCE
		(BATCH_NO ASC)
;
CREATE INDEX IDX_CREATE_TIME ON YMF_REMITTANCE
		(CREATE_TIME ASC)
;

ALTER TABLE YMF_ORDER ADD COLUMN balance_type VARCHAR(32)  DEFAULT  'T1';
ALTER TABLE YMF_CUSTOMER ADD COLUMN balance_product VARCHAR(32)  DEFAULT 'T1';

---秒到新增字段  定时相关
ALTER TABLE YMF.YMF_REMITTANCE ADD COLUMN REMIT_REQUEST_TIME TIMESTAMP;//上次请求打款时间
ALTER TABLE YMF.YMF_REMITTANCE ADD COLUMN REMIT_COUNT INT DEFAULT 0;//请求打款次数


--秒到需求end



--银联终端号
CREATE TABLE YMF_TERMINALNO (
  ID              BIGINT NOT NULL PRIMARY KEY,
  OPTIMISITC      BIGINT DEFAULT 0,
  CUSTOMER_NUMBER VARCHAR(30),
  TERMINAL_NUMBER VARCHAR(30),
  STATUS          VARCHAR(30),
  CREATE_TIME   TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL,  -- 创建时间
  LASTMODIFY_TIME   TIMESTAMP,
  OPERATOR_NAME   VARCHAR(100)
);
CREATE sequence YMF_TERMINALNO_SEQ AS BIGINT START WITH 1 increment BY 1 no
minvalue no maxvalue no cycle cache 20 no ORDER;

CREATE INDEX YMF_TERMINALNO_CUSTOMER_NUMBER_INDEX ON YMF_TERMINALNO (CUSTOMER_NUMBER);
CREATE INDEX YMF_TERMINALNO_TERMINAL_NUMBER_INDEX ON YMF_TERMINALNO (TERMINAL_NUMBER);
--银联终端号END

-------------网点 begin

CREATE TABLE YMF_SHOP
(
    ID bigint PRIMARY KEY NOT NULL,
    SHOP_NUMBER varchar(64) ,
    SHOP_NAME varchar(256),
    CUSTOMER_NUMBER varchar(64),
    PROVINCE varchar(32),
    PROVINCE_NAME varchar(128),
    CITY varchar(32),
    CITY_NAME varchar(128),
    ADDRESS varchar(512),
    LINK_MAN varchar(32),
    LINK_PHONE varchar(16),
    STATUS varchar(32),
    CREATE_USER varchar(32),
    CREATE_TIME   TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL  -- 创建时间
);

CREATE INDEX YMF_SHOP_SHOP_NUMBER_INDEX ON YMF_SHOP (SHOP_NUMBER);
CREATE INDEX YMF_SHOP_CUSTOMER_NUMBER_INDEX ON YMF_SHOP (CUSTOMER_NUMBER);
CREATE INDEX YMF_SHOP_CREATE_TIME_INDEX ON YMF_SHOP (CREATE_TIME);

CREATE sequence SEQ_YMF_SHOP_ID AS BIGINT START WITH 1 increment BY 1 no
minvalue no maxvalue no cycle cache 20 no ORDER;
--二维码表
ALTER TABLE
    YMF.YMF_QRCODE ADD COLUMN shop_number VARCHAR(64);
CREATE INDEX YMF_QRCODE_SHOP_NUMBER_INDEX ON YMF_QRCODE (SHOP_NUMBER);

--订单表
ALTER TABLE
    YMF.YMF_ORDER ADD COLUMN shop_number VARCHAR(64);
CREATE INDEX YMF_ORDER_SHOP_NUMBER_INDEX ON YMF_ORDER (SHOP_NUMBER);
ALTER TABLE
    YMF.YMF_ORDER ADD COLUMN user_id VARCHAR(64);

-------------网点 end

--节假日信息表
CREATE TABLE YMF_HOLIDAY_INFO
(
    ID BIGINT PRIMARY KEY NOT NULL,
    CREATE_TIME   TIMESTAMP DEFAULT CURRENT TIMESTAMP,
    LASTMODIFY_TIME   TIMESTAMP DEFAULT CURRENT TIMESTAMP,
    HOLIDAY_DATE DATE DEFAULT CURRENT DATE ,
    DEAL_TIMES INT DEFAULT 0,
    REMARK VARCHAR(256),
    STATUS VARCHAR(32)
);

CREATE SEQUENCE YMF_HOLIDAY_SEQ AS BIGINT START WITH 1 INCREMENT BY 1 NO
MINVALUE NO MAXVALUE NO CYCLE CACHE 20 NO ORDER;

CREATE  INDEX IDX_YMF_CREATE_TIME ON YMF_HOLIDAY_INFO (CREATE_TIME);
CREATE UNIQUE INDEX IDX_YMF_HOLIDAY_DATE ON YMF_HOLIDAY_INFO (HOLIDAY_DATE);
--节假日信息 end

-- TODO 建表语句请放在上边,并且记得在在dbscript的上线单中添加下边的表授权语句
--给表分权限 eg
--TO USER YMFAPP
GRANT INSERT,UPDATE,DELETE,SELECT ON TABLE YMF_WECHAT_REL TO USER YMFAPP;
--TO USER YMFREAD
GRANT SELECT ON TABLE YMF_WECHAT_REL TO USER YMFREAD;
-- TO DATA_BANK
GRANT SELECT ON TABLE YMF_REMITTANCE TO USER query;
--SEQUENCE 给表赋权限
GRANT USAGE ON SEQUENCE YMF_WECHATREL_SEQ TO USER YMFAPP;


--------销售二维码 start
--业务员表
create table ymf.ymf_sales(
id bigint not null GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1 ),
  group_id bigint not null,  --一级商户ID
  customer_id bigint not null, --所属商户ID
  customer_number VARCHAR(30) not null, --所属商户编码
  user_name  varchar(20) not null,
  user_no varchar(30), --工号
  mobile  varchar(30) not null, --手机号码不能重复
  wx_name varchar(30), --微信号
  email varchar(30), --邮箱
  bank_no varchar(30),--银行卡号
  bank_name varchar(50), --银行名称
  status varchar(50),
  create_time timestamp not null default current_timestamp,
  update_time timestamp,
  qr_id varchar(50),
  PRIMARY KEY (ID)
);

CREATE UNIQUE INDEX idx_qr_id ON YMF_SALES (qr_id);
CREATE INDEX idx_sales_customer_number ON YMF_SALES (customer_number);
CREATE INDEX idx_sales_user_name ON YMF_SALES (user_name);
CREATE INDEX idx_sales_mobile ON YMF_SALES (mobile);
CREATE INDEX idx_sales_create_time ON YMF_SALES (create_time);
CREATE INDEX idx_sales_group_id ON YMF_SALES (group_id);
CREATE INDEX idx_sales_customer_id ON YMF_SALES (customer_id);


--集团表(一级商户)
create table ymf.ymf_group(
  id bigint not null GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1 ),
  group_name varchar(50), --集团名称
  status varchar(50),
 create_user varchar(50),
  create_time timestamp not null default current_timestamp,
  update_time timestamp,
  PRIMARY KEY (ID)
);

create index idx_group_name on YMF_GROUP(group_name) ;
create index idx_ymf_group_create_time on YMF_GROUP(create_time) ;

--商户表新增所属集团/一级商户
alter table ymf_customer add group_id bigint;
create index idx_ymf_customer_group_id on ymf_customer(group_id) ;

--------销售二维码 end

--------结算记录变更
//订单表增加索引
CREATE INDEX YMF.YMF_PAYMENT_ORDER_ID_INDEX ON YMF.YMF_PAYMENT(ORDER_ID);
CREATE INDEX YMF.YMF_SETTLE_DETAIL_YEEPAY_ORDER_ID_INDEX ON YMF.YMF_SETTLE_DETAIL(YEEPAY_ORDER_ID);
//结算记录表增加三个字段
ALTER TABLE YMF.YMF_SETTLE_DETAIL ADD COLUMN EXTERNAL_ID VARCHAR(64);
ALTER TABLE YMF.YMF_SETTLE_DETAIL ADD COLUMN SETTLE_STATUS VARCHAR(64) DEFAULT 'SUCCESS';
ALTER TABLE YMF.YMF_SETTLE_DETAIL ADD COLUMN REMARK VARCHAR(256);
CREATE INDEX YMF.YMF_SETTLE_DETAIL_EXTERNAL_ID_IDX ON YMF.YMF_SETTLE_DETAIL (EXTERNAL_ID);

--------结算记录变更 end

-------二维码改造  xiaobin.liu 09-21
ALTER TABLE YMF_CUSTOMER ADD COLUMN SHORT_NAME VARCHAR(256);
ALTER TABLE YMF.YMF_QRCODE ADD COLUMN QR_CONTENT VARCHAR(256);

-------子公司毛利记录 xiaobin.liu 17-12-14
CREATE TABLE YMF_PROFIT
(
  ID                  BIGINT PRIMARY KEY NOT NULL,
  UNIQUE_ID           VARCHAR(128),--确认一条记录唯一性CUSTOMER_NUMBER+TRX_DATE+MARKETING_CODE+CALCULATE_CODE
  DAY_COUNT           BIGINT,--该商户本月交易天数
  MONTH               VARCHAR(16),
  SALE                VARCHAR(64),
  CUSTOMER_NUMBER     VARCHAR(64),
  AGENT_NUMBER        VARCHAR(64),
  TOTAL_TRX_COUNT     BIGINT,--交易笔数
  TRX_AMT             DECIMAL(18, 4),--交易金额
  PROFIT_AMT          DECIMAL(18, 4),--毛利
  SALES_PRODUCT_CODE  VARCHAR(64),--营销产品码
  PRODUCT_CODE        VARCHAR(64),--核算产品码
  PROFIT_PRODUCT_TYPE VARCHAR(64),--毛利产品类型
  CUSTOMER_TYPE       VARCHAR(64),--商户类型:存量,非存量
  MITANG_TRXAMT       DECIMAL(18, 4),--蜜糖计算后交易金额
  MITANG_PROFIT_AMT   DECIMAL(18, 4),--蜜糖计算后毛利金额
  PERCENT             DECIMAL(18,6),--存量商户计算比例,只有收款宝有
  CALCULATE_STATUS    VARCHAR(32),--计算状态
  SUMMATION_ID        BIGINT,--汇总关联ID
  CREATE_TIME         TIMESTAMP,
  UPDATE_TIME         TIMESTAMP
);
---索引
CREATE INDEX YMF_PROFIT_CUSTOMER_NUMBER_index ON YMF_PROFIT (CUSTOMER_NUMBER);
CREATE INDEX YMF_PROFIT_MONTH_index ON YMF_PROFIT (MONTH);
CREATE INDEX YMF_PROFIT_SUMMATION_ID_index ON YMF_PROFIT (SUMMATION_ID);
CREATE UNIQUE INDEX YMF_PROFIT_UNIQUE_ID_index ON YMF_PROFIT (UNIQUE_ID);
---SEQ
CREATE SEQUENCE YMF_PROFIT_ID_SEQ AS BIGINT START WITH 1 INCREMENT BY 1 NO
MINVALUE NO MAXVALUE NO CYCLE CACHE 20 NO ORDER;
-------子公司毛利汇总表
CREATE TABLE YMF_PROFIT_SUMMATION
(
  ID                  BIGINT PRIMARY KEY NOT NULL,
  MONTH               VARCHAR(16),
  TOTAL_COUNT         BIGINT,
  TOTAL_DAY_COUNT     BIGINT,
  TOTAL_TRX_COUNT     BIGINT,
  TOTAL_TRX_AMT       DECIMAL(18, 4),
  TOTAL_PROFIT_AMT    DECIMAL(18, 4),
  MITANG_TOTAL_TRXAMT DECIMAL(18, 4),
  MITANG_TOTAL_PROFIT_AMT DECIMAL(18, 4),
  PROFIT_PRODUCT_TYPE VARCHAR(64),
  CUSTOMER_TYPE       VARCHAR(64),
  CALCULATE_STATUS    VARCHAR(32),
  PERCENT             DECIMAL(18,6),
  CREATE_TIME         TIMESTAMP,
  UPDATE_TIME         TIMESTAMP
);
---索引
CREATE INDEX YMF_PROFIT_SUMMATION_CREATE_TIME_index ON YMF_PROFIT_SUMMATION (CREATE_TIME);
CREATE INDEX YMF_PROFIT_SUMMATION_MONTH_index ON YMF_PROFIT_SUMMATION (MONTH);
---SEQ
CREATE SEQUENCE YMF_PROFIT_SUMMATION_ID_SEQ AS BIGINT START WITH 1 INCREMENT BY 1 NO
MINVALUE NO MAXVALUE NO CYCLE CACHE 20 NO ORDER;